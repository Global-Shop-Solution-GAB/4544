Program.Sub.ScreenSU.Start
Gui.FrmAging..Create(BaseForm)
Gui.FrmAging..Caption("AR Monthly Buckets")
Gui.FrmAging..Size(15360,10725)
Gui.FrmAging..MinX(0)
Gui.FrmAging..MinY(0)
Gui.FrmAging..Position(0,0)
Gui.FrmAging..BackColor(-2147483633)
Gui.FrmAging..MousePointer(0)
Gui.FrmAging..Event(UnLoad,FrmAging_UnLoad)
Gui.FrmAging..Event(Resize,frmAging_Resize)
Gui.FrmAging..AlwaysOnTop(False)
Gui.FrmAging..FontName("Tahoma")
Gui.FrmAging..FontSize(8.25)
Gui.FrmAging..ControlBox(True)
Gui.FrmAging..MaxButton(True)
Gui.FrmAging..MinButton(True)
Gui.FrmAging..Moveable(True)
Gui.FrmAging..Sizeable(True)
Gui.FrmAging..ShowInTaskBar(True)
Gui.FrmAging..TitleBar(True)
Gui.FrmAging.framePermissions.Create(Frame)
Gui.FrmAging.framePermissions.Size(1965,390)
Gui.FrmAging.framePermissions.Position(13080,555)
Gui.FrmAging.framePermissions.Enabled(True)
Gui.FrmAging.framePermissions.Visible(True)
Gui.FrmAging.framePermissions.Zorder(0)
Gui.FrmAging.framePermissions.Caption("")
Gui.FrmAging.framePermissions.FontName("Tahoma")
Gui.FrmAging.framePermissions.FontSize(7.8)
Gui.FrmAging.optView.Create(Option)
Gui.FrmAging.optView.Size(690,195)
Gui.FrmAging.optView.Position(225,150)
Gui.FrmAging.optView.Caption("View")
Gui.FrmAging.optView.Parent("framePermissions")
Gui.FrmAging.optView.Enabled(True)
Gui.FrmAging.optView.Visible(True)
Gui.FrmAging.optView.Zorder(0)
Gui.FrmAging.optView.FontName("Tahoma")
Gui.FrmAging.optView.FontSize(7.8)
Gui.FrmAging.optEdit.Create(Option)
Gui.FrmAging.optEdit.Size(645,195)
Gui.FrmAging.optEdit.Position(1050,150)
Gui.FrmAging.optEdit.Caption("Edit")
Gui.FrmAging.optEdit.Enabled(False)
Gui.FrmAging.optEdit.Parent("framePermissions")
Gui.FrmAging.optEdit.Visible(True)
Gui.FrmAging.optEdit.Zorder(0)
Gui.FrmAging.optEdit.FontName("Tahoma")
Gui.FrmAging.optEdit.FontSize(7.8)
Gui.FrmAging.frameButtons.Create(Frame)
Gui.FrmAging.frameButtons.Size(1965,600)
Gui.FrmAging.frameButtons.Position(13080,75)
Gui.FrmAging.frameButtons.Enabled(True)
Gui.FrmAging.frameButtons.Visible(True)
Gui.FrmAging.frameButtons.Zorder(0)
Gui.FrmAging.frameButtons.Caption("")
Gui.FrmAging.frameButtons.FontName("Tahoma")
Gui.FrmAging.frameButtons.FontSize(7.8)
Gui.FrmAging.cmdExport.Create(Button)
Gui.FrmAging.cmdExport.Size(840,375)
Gui.FrmAging.cmdExport.Position(1020,150)
Gui.FrmAging.cmdExport.Caption("Export")
Gui.FrmAging.cmdExport.Parent("frameButtons")
Gui.FrmAging.cmdExport.Event(Click,cmdExport_Click)
Gui.FrmAging.cmdExport.Enabled(True)
Gui.FrmAging.cmdExport.Visible(True)
Gui.FrmAging.cmdExport.Zorder(0)
Gui.FrmAging.cmdExport.FontName("Tahoma")
Gui.FrmAging.cmdExport.FontSize(7.8)
Gui.FrmAging.cmdRefresh.Create(Button)
Gui.FrmAging.cmdRefresh.Size(840,375)
Gui.FrmAging.cmdRefresh.Position(120,150)
Gui.FrmAging.cmdRefresh.Caption("REFRESH")
Gui.FrmAging.cmdRefresh.Parent("frameButtons")
Gui.FrmAging.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.FrmAging.cmdRefresh.Enabled(True)
Gui.FrmAging.cmdRefresh.Visible(True)
Gui.FrmAging.cmdRefresh.Zorder(0)
Gui.FrmAging.cmdRefresh.FontName("Tahoma")
Gui.FrmAging.cmdRefresh.FontSize(7.8)
Gui.FrmAging.picGSSLogo.Create(PictureBox)
Gui.FrmAging.picGSSLogo.Size(4125,960)
Gui.FrmAging.picGSSLogo.Position(5565,45)
Gui.FrmAging.picGSSLogo.Event(DblClick,picGSSLogo_DblClick)
Gui.FrmAging.picGSSLogo.ToolTip("Double-Click for additional functions")
Gui.FrmAging.picGSSLogo.Enabled(True)
Gui.FrmAging.picGSSLogo.Visible(True)
Gui.FrmAging.picGSSLogo.Zorder(0)
Gui.FrmAging.pbStatus.Create(ProgressBar)
Gui.FrmAging.pbStatus.Visible(False)
Gui.FrmAging.pbStatus.Size(3735,255)
Gui.FrmAging.pbStatus.Position(75,375)
Gui.FrmAging.lblStatus.Create(Label,"Loading AR Aging....",False,3765,255,0,75,135,True,0,"Arial",8,-986896,0,0)
Gui.FrmAging.lblStatus.BorderStyle(0)
Gui.FrmAging.frameTotals.Create(Frame)
Gui.FrmAging.frameTotals.Size(7980,900)
Gui.FrmAging.frameTotals.Position(7185,9360)
Gui.FrmAging.frameTotals.Caption("Totals")
Gui.FrmAging.frameTotals.Enabled(True)
Gui.FrmAging.frameTotals.Visible(True)
Gui.FrmAging.frameTotals.Zorder(0)
Gui.FrmAging.frameTotals.FontName("Tahoma")
Gui.FrmAging.frameTotals.FontSize(7.8)
Gui.FrmAging.txtAmt.Create(TextBox,"",True,1215,300,0,90,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtAmt.Parent("frameTotals")
Gui.FrmAging.txtAmt.Locked(True)
Gui.FrmAging.txtMonth1.Create(TextBox,"",True,1215,300,0,1380,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtMonth1.Parent("frameTotals")
Gui.FrmAging.txtMonth1.Locked(True)
Gui.FrmAging.txtMonth2.Create(TextBox,"",True,1215,300,0,2670,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtMonth2.Parent("frameTotals")
Gui.FrmAging.txtMonth2.Locked(True)
Gui.FrmAging.txtMonth3.Create(TextBox,"",True,1215,300,0,3960,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtMonth3.Parent("frameTotals")
Gui.FrmAging.txtMonth3.Locked(True)
Gui.FrmAging.txtPrior.Create(TextBox,"",True,1215,300,0,5250,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtPrior.Parent("frameTotals")
Gui.FrmAging.txtPrior.Locked(True)
Gui.FrmAging.txtNA.Create(TextBox,"",True,1215,300,0,6555,510,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtNA.Parent("frameTotals")
Gui.FrmAging.txtNA.Locked(True)
Gui.FrmAging.lblNA.Create(Label,"Not Aged",True,1215,180,0,6555,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblNA.Parent("frameTotals")
Gui.FrmAging.lblNA.BorderStyle(0)
Gui.FrmAging.lblPrior.Create(Label,"Prior",True,1215,180,0,5250,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblPrior.Parent("frameTotals")
Gui.FrmAging.lblPrior.BorderStyle(0)
Gui.FrmAging.lblMonth3.Create(Label,"Month3",True,1215,180,0,3960,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblMonth3.Parent("frameTotals")
Gui.FrmAging.lblMonth3.BorderStyle(0)
Gui.FrmAging.lblMonth2.Create(Label,"Month2",True,1215,180,0,2670,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblMonth2.Parent("frameTotals")
Gui.FrmAging.lblMonth2.BorderStyle(0)
Gui.FrmAging.lblMonth1.Create(Label,"Month1",True,1215,180,0,1380,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblMonth1.Parent("frameTotals")
Gui.FrmAging.lblMonth1.BorderStyle(0)
Gui.FrmAging.lblAmt.Create(Label,"Amount",True,1215,180,0,90,315,True,0,"Arial",8,-2147483633,0,0)
Gui.FrmAging.lblAmt.Parent("frameTotals")
Gui.FrmAging.lblAmt.BorderStyle(0)
Gui.FrmAging.chkMonthEnd.Create(CheckBox)
Gui.FrmAging.chkMonthEnd.Size(1590,360)
Gui.FrmAging.chkMonthEnd.Position(11460,255)
Gui.FrmAging.chkMonthEnd.Caption("Day Month Ends")
Gui.FrmAging.chkMonthEnd.Event(Click,chkMonthEnd_Click)
Gui.FrmAging.chkMonthEnd.Enabled(True)
Gui.FrmAging.chkMonthEnd.Visible(True)
Gui.FrmAging.chkMonthEnd.Zorder(0)
Gui.FrmAging.chkMonthEnd.FontName("Tahoma")
Gui.FrmAging.chkMonthEnd.FontSize(7.8)
Gui.FrmAging.txtMonthEnd.Create(TextBox,"",True,450,330,0,12015,510,False,2,"Arial",8,-2147483643,1)
Gui.FrmAging.txtMonthEnd.NumericOnly(2)
Gui.FrmAging.txtMonthEnd.Event(LostFocus,txtMonthEnd_LostFocus)
'G Mansur 08/15/2023: Forcing text to black
Gui.FrmAging.txtMonthEnd.ForeColor(0)
'===
Gui.FrmAging.tabAR.Create(Tab)
Gui.FrmAging.tabAR.Size(15120,8280)
Gui.FrmAging.tabAR.Position(45,1065)
Gui.FrmAging.tabAR.Event(Click,tabAR_Click)
Gui.FrmAging.tabAR.Enabled(True)
Gui.FrmAging.tabAR.Visible(True)
Gui.FrmAging.tabAR.Zorder(0)
Gui.FrmAging.tabAR.FontName("Tahoma")
Gui.FrmAging.tabAR.FontSize(7.8)
Gui.FrmAging.tabAR.Tabs(3)
Gui.FrmAging.tabAR.SetTab(0)
Gui.FrmAging.tabAR.Caption("AR Aging")
Gui.FrmAging.tabAR.SetTab(1)
Gui.FrmAging.tabAR.Caption("Overdue Invoices")
Gui.FrmAging.tabAR.SetTab(2)
Gui.FrmAging.tabAR.Caption("Analysis")
Gui.FrmAging.GSGCAging.Create(GsGridControl)
Gui.FrmAging.GSGCAging.Size(14985,7860)
Gui.FrmAging.GSGCAging.Position(0,0)
Gui.FrmAging.GSGCAging.Event(RowCellClick,GSGCAging_RowCellClick)
Gui.FrmAging.GSGCAging.Event(ColumnFilterChanged,GSGCAging_ColumnFilterChanged)
Gui.FrmAging.GSGCAging.Parent("tabAR",0)
Gui.FrmAging.GSGCAging.Enabled(True)
Gui.FrmAging.GSGCAging.Visible(True)
Gui.FrmAging.GSGCAging.Zorder(0)
Gui.FrmAging.GSGCOverdue.Create(GsGridControl)
Gui.FrmAging.GSGCOverdue.Size(14985,7860)
Gui.FrmAging.GSGCOverdue.Position(0,0)
Gui.FrmAging.GSGCOverdue.Parent("tabAR",1)
Gui.FrmAging.GSGCOverdue.Event(RowCellClick,GSGCOverdue_RowCellClick)
Gui.FrmAging.GSGCOverdue.Event(CellValueChanged,GSGCOverdue_CellValueChanged)
Gui.FrmAging.GSGCOverdue.Event(ColumnFilterChanged,GSGCOverdue_ColumnFilterChanged)
Gui.FrmAging.GSGCOverdue.Enabled(True)
Gui.FrmAging.GSGCOverdue.Visible(True)
Gui.FrmAging.GSGCOverdue.Zorder(0)
Gui.FrmAging.GsChartTopTen.Create(GsChart)
Gui.FrmAging.GsChartTopTen.Enabled(False)
Gui.FrmAging.GsChartTopTen.Size(7455,7740)
Gui.FrmAging.GsChartTopTen.Position(7530,90)
Gui.FrmAging.GsChartTopTen.Parent("tabAR",2)
Gui.FrmAging.GsChartTopTen.Visible(True)
Gui.FrmAging.GsChartTopTen.Zorder(0)
Gui.FrmAging.GsChartAging.Create(GsChart)
Gui.FrmAging.GsChartAging.Enabled(False)
Gui.FrmAging.GsChartAging.Size(7455,7740)
Gui.FrmAging.GsChartAging.Position(30,90)
Gui.FrmAging.GsChartAging.Parent("tabAR",2)
Gui.FrmAging.GsChartAging.Visible(True)
Gui.FrmAging.GsChartAging.Zorder(0)
Gui.FrmAging.lblCharts.Create(Label,"**Double Click on the Charts to Expand",False,3495,255,0,90,750,False,0,"Arial",8,-986896,0,0)
Gui.FrmAging.lblCharts.ForeColor(0)
Gui.FrmAging.lblCharts.BorderStyle(0)
Gui.FrmAging.frameTotalOverdue.Create(Frame)
Gui.FrmAging.frameTotalOverdue.Visible(False)
Gui.FrmAging.frameTotalOverdue.Size(1500,900)
Gui.FrmAging.frameTotalOverdue.Position(13665,9360)
Gui.FrmAging.frameTotalOverdue.Caption("Totals")
Gui.FrmAging.frameTotalOverdue.Enabled(True)
Gui.FrmAging.frameTotalOverdue.Zorder(0)
Gui.FrmAging.frameTotalOverdue.FontName("Tahoma")
Gui.FrmAging.frameTotalOverdue.FontSize(7.8)
Gui.FrmAging.txtTot.Create(TextBox,"",True,1215,300,0,135,345,True,0,"Arial",8,-2147483643,1)
Gui.FrmAging.txtTot.Parent("frameTotalOverdue")
Gui.frmWeb..Create(BaseForm)
Gui.frmWeb..Caption("Global Shop Solutions - Web Sites")
Gui.frmWeb..Size(3990,2025)
Gui.frmWeb..MinX(0)
Gui.frmWeb..MinY(0)
Gui.frmWeb..Position(0,0)
Gui.frmWeb..BackColor(-2147483633)
Gui.frmWeb..MousePointer(0)
Gui.frmWeb..MaxButton(False)
Gui.frmWeb..Sizeable(False)
Gui.frmWeb..Event(UnLoad,frmWeb_UnLoad)
Gui.frmWeb..MinButton(False)
Gui.frmWeb..AlwaysOnTop(False)
Gui.frmWeb..FontName("Tahoma")
Gui.frmWeb..FontSize(8.25)
Gui.frmWeb..ControlBox(True)
Gui.frmWeb..Moveable(True)
Gui.frmWeb..ShowInTaskBar(True)
Gui.frmWeb..TitleBar(True)
Gui.frmWeb.cmdGSS.Create(Button)
Gui.frmWeb.cmdGSS.Size(3615,375)
Gui.frmWeb.cmdGSS.Position(120,45)
Gui.frmWeb.cmdGSS.Caption("Global Shop Solutions")
Gui.frmWeb.cmdGSS.Event(Click,cmdGSS_Click)
Gui.frmWeb.cmdGSS.Enabled(True)
Gui.frmWeb.cmdGSS.Visible(True)
Gui.frmWeb.cmdGSS.Zorder(0)
Gui.frmWeb.cmdGSS.FontName("Tahoma")
Gui.frmWeb.cmdGSS.FontSize(7.8)
Gui.frmWeb.cmdServ.Create(Button)
Gui.frmWeb.cmdServ.Size(3615,375)
Gui.frmWeb.cmdServ.Position(120,450)
Gui.frmWeb.cmdServ.Caption("GSS Service")
Gui.frmWeb.cmdServ.Event(Click,cmdServ_Click)
Gui.frmWeb.cmdServ.Enabled(True)
Gui.frmWeb.cmdServ.Visible(True)
Gui.frmWeb.cmdServ.Zorder(0)
Gui.frmWeb.cmdServ.FontName("Tahoma")
Gui.frmWeb.cmdServ.FontSize(7.8)
Gui.frmWeb.cmdUpd.Create(Button)
Gui.frmWeb.cmdUpd.Size(3615,375)
Gui.frmWeb.cmdUpd.Position(120,855)
Gui.frmWeb.cmdUpd.Caption("GSS Updates")
Gui.frmWeb.cmdUpd.Event(Click,cmdUpd_Click)
Gui.frmWeb.cmdUpd.Enabled(True)
Gui.frmWeb.cmdUpd.Visible(True)
Gui.frmWeb.cmdUpd.Zorder(0)
Gui.frmWeb.cmdUpd.FontName("Tahoma")
Gui.frmWeb.cmdUpd.FontSize(7.8)
Gui.frmWeb.cmdResetGsGC.Create(Button)
Gui.frmWeb.cmdResetGsGC.Size(3615,375)
Gui.frmWeb.cmdResetGsGC.Position(120,1260)
Gui.frmWeb.cmdResetGsGC.Caption("Reset All Columns")
Gui.frmWeb.cmdResetGsGC.Event(Click,cmdResetGsGC_Click)
Gui.frmWeb.cmdResetGsGC.Enabled(True)
Gui.frmWeb.cmdResetGsGC.Visible(True)
Gui.frmWeb.cmdResetGsGC.Zorder(0)
Gui.frmWeb.cmdResetGsGC.FontName("Tahoma")
Gui.frmWeb.cmdResetGsGC.FontSize(7.8)
Gui.frmEInvoice..Create(BaseForm)
Gui.frmEInvoice..Caption("E-Invoicing")
Gui.frmEInvoice..Size(6000,1845)
Gui.frmEInvoice..MinX(0)
Gui.frmEInvoice..MinY(0)
Gui.frmEInvoice..Position(0,0)
Gui.frmEInvoice..BackColor(-2147483633)
Gui.frmEInvoice..MousePointer(0)
Gui.frmEInvoice..AlwaysOnTop(False)
Gui.frmEInvoice..FontName("Tahoma")
Gui.frmEInvoice..FontSize(8.25)
Gui.frmEInvoice..ControlBox(True)
Gui.frmEInvoice..MaxButton(True)
Gui.frmEInvoice..MinButton(True)
Gui.frmEInvoice..Moveable(True)
Gui.frmEInvoice..Sizeable(True)
Gui.frmEInvoice..ShowInTaskBar(True)
Gui.frmEInvoice..TitleBar(True)
Gui.frmEInvoice.lbl1.Create(Label,"***CHANGE***",True,3735,255,0,1080,225,True,2,"Arial",12,-986896,0,0)
Gui.frmEInvoice.lbl1.BorderStyle(0)
Gui.frmEInvoice.progressBar1.Create(ProgressBar)
Gui.frmEInvoice.progressBar1.Size(3735,255)
Gui.frmEInvoice.progressBar1.Position(1080,705)
Gui.frmEInvoice.progressBar1.Visible(True)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sMonthNames.Declare
	V.Global.sMonthNames.Redim(1,12)
	V.Global.sMonthNames(1).Set("January")
	V.Global.sMonthNames(2).Set("February")
	V.Global.sMonthNames(3).Set("March")
	V.Global.sMonthNames(4).Set("April")
	V.Global.sMonthNames(5).Set("May")
	V.Global.sMonthNames(6).Set("June")
	V.Global.sMonthNames(7).Set("July")
	V.Global.sMonthNames(8).Set("August")
	V.Global.sMonthNames(9).Set("September")
	V.Global.sMonthNames(10).Set("October")
	V.Global.sMonthNames(11).Set("November")
	V.Global.sMonthNames(12).Set("December")
	V.Global.iMonth1.Declare
	V.Global.iMonth2.Declare
	V.Global.iMonth3.Declare
	V.Global.iYear1.Declare
	V.Global.iYear2.Declare
	V.Global.dMonth1Beg.Declare
	V.Global.dMonth1End.Declare
	V.Global.dMonth2Beg.Declare
	V.Global.dMonth2End.Declare
	V.Global.dMonth3Beg.Declare
	V.Global.dMonth3End.Declare
	V.Global.sCust.Declare
	V.Global.sInV.Declare
	V.Global.sOrderNo.Declare
	V.Global.sCustPO.Declare
	V.Global.sCustomerName.Declare
	v.Global.sInvoiceMode.Declare
	V.Global.bLoadData.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	v.Local.sIcon.Declare
	v.Local.sGsslogo.Declare
	v.Local.bGroup.Declare

	F.Intrinsic.String.Build("{0}\gss2.ico",V.Caller.GasDir,v.Local.sIcon)		
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.GasDir,V.Local.sGssLogo)
	Gui.FrmAging..Icon(v.Local.sIcon)
	Gui.frmWeb..Icon(v.Local.sIcon)
	Gui.frmEInvoice..Icon(v.Local.sIcon)
	Gui.FrmAging.picGSSLogo.Picture(v.Local.sGsslogo)

	F.Global.Security.IsInGroup(v.Caller.User,"EditAR",V.Caller.CompanyCode,V.Local.bGroup)
	F.Intrinsic.Control.If(v.Local.bGroup)
		Gui.FrmAging.optEdit.Enabled(True)
	F.Intrinsic.Control.EndIf
	
	Gui.FrmAging.optView.Value(True)
	Gui.FrmAging.tabAR.SetTab(0)

	F.Intrinsic.Control.CallSub(SetAnchors)
	F.Intrinsic.Control.CallSub(CheckMonthEnd)
	F.ODBC.Connection!con.OpenCompanyConnection(500)
	F.Intrinsic.Control.CallSub(CheckTable)
	Gui.FrmAging..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.FrmAging_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.End 

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.FrmAging_UnLoad.End

Program.Sub.frmAging_Resize.Start
v.Local.fWBase.Declare

	f.Intrinsic.Math.Sub(v.Screen.FrmAging!tabAP.Width,15120,v.Local.fWBase)
	
	f.Intrinsic.Math.Div(v.Local.fWBase,2,v.Local.fWBase)
	
	f.Intrinsic.Math.Add(7455,v.Local.fWBase,v.Local.fWBase)
	
	Gui.FrmAging.gsChartAging.Size(v.Local.fWBase,v.Screen.FrmAging!gsChartAging.Height)
	Gui.FrmAging.gsChartTopTen.Size(v.Local.fWBase,v.Screen.FrmAging!gsChartTopTen.Height)
	
	f.Intrinsic.Math.Add(V.Screen.FrmAging!gsChartAging.Left,v.Screen.FrmAging!gsChartAging.Width,50,v.Local.fWBase)
	
	Gui.FrmAging.gsChartTopTen.Position(v.Local.fWBase,v.Screen.FrmAging!gsChartTopTen.Top)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmAging_Resize.End

Program.Sub.SetAnchors.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right

	Gui.FrmAging.GSGCAging.Anchor(15)
	Gui.FrmAging.GSGCOverdue.Anchor(15)
	Gui.FrmAging.tabAR.Anchor(15)
	Gui.FrmAging.framePermissions.Anchor(9)
	Gui.FrmAging.frameButtons.Anchor(9)
	Gui.FrmAging.picGSSLogo.Anchor(1)
	Gui.FrmAging.lblStatus.Anchor(5)
	Gui.FrmAging.pbStatus.Anchor(5)
	Gui.FrmAging.frameTotals.Anchor(10)
	Gui.FrmAging.frameTotalOverdue.Anchor(10)
	Gui.FrmAging.lblCharts.Anchor(5)
	Gui.FrmAging.gsChartTopTen.Anchor(3)
	Gui.FrmAging.gsChartAging.Anchor(7)
	Gui.FrmAging.chkMonthEnd.Anchor(9)
	Gui.FrmAging.txtMonthEnd.Anchor(9)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetAnchors.End

Program.Sub.CheckTable.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.bRet.Declare

	F.ODBC.Connection!con.TableExists("GAB_4544_OVDUE_INVC",v.Local.bRet)
		F.Intrinsic.Control.If(v.Local.bRet,=,false)
			F.ODBC.Connection!con.Execute("CREATE TABLE GAB_4544_OVDUE_INVC(INVOICE VARCHAR(10),NOTE_1 LONGVARCHAR,CHANGE_DATE VARCHAR(15),CHANGE_USER VARCHAR(20));")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckTable.End

Program.Sub.DisableScreen.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.FrmAging.lblStatus.Visible(True)
	Gui.FrmAging.pbStatus.Visible(True)
	Gui.FrmAging.GSGCAging.Visible(False)
	Gui.FrmAging.frameButtons.Enabled(False)
	Gui.FrmAging.framePermissions.Enabled(False)
	Gui.FrmAging.chkMonthEnd.Enabled(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.DisableScreen.End

Program.Sub.EnableScreen.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.FrmAging.lblStatus.Visible(False)
	Gui.FrmAging.pbStatus.Visible(False)
	Gui.FrmAging.GSGCAging.Visible(True)
	Gui.FrmAging.frameButtons.Enabled(True)
	Gui.FrmAging.framePermissions.Enabled(True)
	Gui.FrmAging.chkMonthEnd.Enabled(True)
	Gui.FrmAging.pbStatus.Value(0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EnableScreen.End

Program.Sub.cmdRefresh_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.CallSub(disablescreen)
	F.Intrinsic.Control.CallSub(loaddtage)
	F.Intrinsic.Control.CallSub(araging)
	F.Intrinsic.Control.CallSub(settotals,"Load","One")
	F.Intrinsic.Control.CallSub(loaddtoverdue)
	F.Intrinsic.Control.CallSub(total,"Filter","INVOICE LIKE '%%'")
	F.Intrinsic.Control.CallSub(charts1)
	F.Intrinsic.Control.CallSub(charts2)
	
	F.Intrinsic.Control.CallSub(enablescreen)
	F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.CallSub(Deserialize)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.tabAR_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.FrmAging!tabAR.Tab,=,0)
		Gui.FrmAging.chkMonthEnd.Visible(True)
		Gui.FrmAging.txtMonthEnd.Visible(True)
		Gui.FrmAging.frameTotals.Visible(True)
		Gui.FrmAging.frameTotalOverdue.Visible(False)
		Gui.FrmAging.lblCharts.Visible(False)
		Gui.FrmAging.cmdExport.Enabled(True)
	F.Intrinsic.Control.ElseIf(V.Screen.FrmAging!tabAR.Tab,=,1)
		Gui.FrmAging.chkMonthEnd.Visible(False)
		Gui.FrmAging.txtMonthEnd.Visible(False)
		Gui.FrmAging.frameTotals.Visible(False)
		Gui.FrmAging.frameTotalOverdue.Visible(True)
		Gui.FrmAging.lblCharts.Visible(False)
		Gui.FrmAging.cmdExport.Enabled(True)
	F.Intrinsic.Control.ElseIf(V.Screen.FrmAging!tabAR.Tab,=,2)
		Gui.FrmAging.chkMonthEnd.Visible(False)
		Gui.FrmAging.txtMonthEnd.Visible(False)
		Gui.FrmAging.frameTotals.Visible(False)
		Gui.FrmAging.frameTotalOverdue.Visible(False)
		Gui.FrmAging.lblCharts.Visible(True)
		Gui.FrmAging.cmdExport.Enabled(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.tabAR_Click.End

Program.Sub.chkMonthEnd_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sMonthEnd.Declare

	V.Local.sMonthEnd.Set(V.Screen.FrmAging!txtMonthEnd.Text)
	F.Intrinsic.Control.If(V.Screen.FrmAging!chkMonthEnd.Value,=,1)
		Gui.FrmAging.txtMonthEnd.Enabled(True)
		Gui.FrmAging.txtMonthEnd.BackColor(-2147483643)
		F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"DayMonthEnds",4544,1000,False,"",True,V.Local.sMonthEnd.Long,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.Else
		Gui.FrmAging.txtMonthEnd.Enabled(False)
		Gui.FrmAging.txtMonthEnd.Text("")
		Gui.FrmAging.txtMonthEnd.BackColor(-2147483633)
		F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"DayMonthEnds",4544,1000,False,"",False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.chkMonthEnd_Click.End

Program.Sub.txtMonthEnd_LostFocus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sMonthEnd.Declare

	V.Local.sMonthEnd.Set(V.Screen.FrmAging!txtMonthEnd.Text)
	F.Intrinsic.Control.If(V.Local.sMonthEnd.Long,=,0,OR,V.Local.sMonthEnd.Long,>,31)
		F.Intrinsic.UI.Msgbox("Day Month Ends can not be set to zero nor greater than 31.","Day Month Ends Check")
		Gui.FrmAging.txtMonthEnd.Text("")
	F.Intrinsic.Control.Else
		F.Global.Registry.AddValue("SUPERVSR",V.Caller.CompanyCode,"DayMonthEnds",4544,1000,False,"",True,V.Local.sMonthEnd.Long,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.txtMonthEnd_LostFocus.End

Program.Sub.CheckMonthEnd.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.local.bMonthEnd.Declare
	V.Local.iMonthEnd.Declare

	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"DayMonthEnds",4544,1000,0,"",V.Local.bMonthEnd)
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"DayMonthEnds",4544,1000,1,"",V.Local.iMonthEnd)
	Gui.FrmAging.chkMonthEnd.Value(V.Local.bMonthEnd)
	F.Intrinsic.Control.If(V.Local.bMonthEnd)
		F.Intrinsic.Control.If(V.Local.iMonthEnd,=,0)
			Gui.FrmAging.txtMonthEnd.Text("")
			Gui.FrmAging.txtMonthEnd.Enabled(False)
			Gui.FrmAging.txtMonthEnd.BackColor(-2147483633)
		F.Intrinsic.Control.Else
			Gui.FrmAging.txtMonthEnd.Text(V.Local.iMonthEnd)
			Gui.FrmAging.txtMonthEnd.Enabled(True)
			Gui.FrmAging.txtMonthEnd.BackColor(-2147483643)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		Gui.FrmAging.txtMonthEnd.Text("")
		Gui.FrmAging.txtMonthEnd.BackColor(-2147483633)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.UnBlockEvents

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckMonthEnd.End

Program.Sub.LoadDTAge.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.dAgingDate.Declare
	V.Local.sFilter.Declare
	V.Local.dMaxDate.Declare
	V.Local.iCnt.Declare
	V.Local.iEndOfMonth.Declare
	V.Local.sDate.Declare
	V.Local.iDay.Declare

	F.Intrinsic.Control.If(V.DataTable.dtAging.Exists)
		F.Data.DataTable.Close("dtAging0")
		F.Data.DataTable.Close("dtAging")
		F.Data.Dictionary.Close("dZero")
		F.Data.Dictionary.Close("dAge")
		F.Data.Dictionary.Close("dAge2")
	F.Intrinsic.Control.EndIf
	
	V.Global.bLoadData.Set(True)

	F.Data.DataTable.CreateFromSQL("dtAging0","con","Select A.CUSTOMER,B.NAME_CUSTOMER,LTrim(RTrim(A.INVOICE)) As INVOICE,A.DATE_INVOICE,A.DATE_TRANSACTION,A.DUE_DATE,CASE BATCH_CODE WHEN '10' THEN 'Invoice' WHEN '11' THEN 'Cash' WHEN '12' THEN 'Credit Memo' WHEN '13' THEN 'Adjustment' WHEN '16' THEN 'Fin. Charge' WHEN '17' THEN 'Exch. Var.' END AS TYPE,IF(REFUND_CK_NO <> '', RTrim(A.REFUND_CK_NO),RTrim(A.REFERENCE)) As REFERENCE,AMT_INVOICE,CONVERT(0,SQL_FLOAT) AS MONTH1,CONVERT(0,SQL_FLOAT) AS MONTH2,CONVERT(0,SQL_FLOAT) AS MONTH3,CONVERT(0,SQL_FLOAT) AS PRIOR,CONVERT(0,SQL_FLOAT) AS NOT_AGED,'' AS COLUMN1,'Adjust' AS ADJUST,'' AS PAY,LTrim(RTrim(A.CUSTOMER))+LTrim(RTrim(A.INVOICE)) As CUSTINV FROM V_AR_OPEN_ITEMS A LEFT JOIN V_CUSTOMER_MASTER B ON A.CUSTOMER = B.CUSTOMER ORDER BY A.CUSTOMER,A.DATE_INVOICE,A.DATE_TRANSACTION;",True)
	F.Data.DataTable.AddColumn("dtAging0","ZERO",Float,0)
	F.Data.DataTable.AddColumn("dtAging0","AGE_CASH",Boolean,False)
	F.Data.DataTable.AddColumn("dtAging0","AGE_CASH2",Boolean,False)

	'Set Zeros
	F.Data.Dictionary.CreateFromSQL("dZero","con","SELECT LTrim(RTrim(Customer))+LTrim(RTrim(INVOICE)) As CUSTINV,SUM(AMT_INVOICE) FROM V_AR_OPEN_ITEMS GROUP BY CUSTOMER,INVOICE;")
	F.Data.Dictionary.SetDefaultReturn("dZero",0)
	F.Data.DataTable.FillFromDictionary("dtAging0","dZero","CUSTINV","ZERO")

	'Set Age flag for Cash Items
	F.Data.Dictionary.CreateFromSQL("dAge","con","Select LTrim(RTrim(Customer))+LTrim(RTrim(INVOICE)) As CUSTINV,Cast(If(Count(Invoice) > 1,1,0) as Bit) As AGE_CASH From V_AR_Open_Items Where Batch_Code In ('10','11') Group By CUSTOMER,Invoice,Date_Invoice Order By Invoice;")
	F.Data.Dictionary.SetDefaultReturn("dAge",False)
	F.Data.DataTable.FillFromDictionary("dtAging0","dAge","CUSTINV","AGE_CASH")

	F.Data.Dictionary.CreateFromSQL("dAge2","con","Select LTrim(RTrim(Customer))+LTrim(RTrim(INVOICE)) As CUSTINV,Cast(If(Count(Invoice) > 1,1,0) as Bit) As AGE_CASH From V_AR_Open_Items Where Batch_Code In ('10','12') Group By CUSTOMER,Invoice,Date_Invoice Order By Invoice;")
	F.Data.Dictionary.SetDefaultReturn("dAge2",False)
	F.Data.DataTable.FillFromDictionary("dtAging0","dAge2","CUSTINV","AGE_CASH2")

	'Set DataView Filter
	V.Local.sFilter.Set("ZERO <> 0")
	F.Data.DataView.Create("dtAging0","dvAging0",22,V.Local.sFilter,"")
	F.Data.DataView.ToDataTable("dtAging0","dvAging0","dtAging",True)

	'Get Max Date
	F.Data.DataTable.Compute("dtAging","Max(DATE_INVOICE)","",V.Local.dMaxDate)

	'Set Beginning and Ending Dates for each month
	F.Intrinsic.Control.If(V.Screen.FrmAging!chkMonthEnd.Value,=,0)
		F.Intrinsic.Date.Month(V.Local.dMaxDate,V.Global.iMonth1)
		F.Intrinsic.Date.Year(V.Local.dMaxDate,V.Global.iYear1)
		F.Intrinsic.Control.If(V.Global.iMonth1,=,1)
			V.Global.iMonth2.Set(12)
			F.Intrinsic.Math.Sub(V.Global.iYear1,1,V.Global.iYear2)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Sub(V.Global.iMonth1,1,V.Global.iMonth2)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Global.iMonth2,=,1)
			V.Global.iMonth3.Set(12)
			F.Intrinsic.Math.Sub(V.Global.iYear1,1,V.Global.iYear2)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Sub(V.Global.iMonth2,1,V.Global.iMonth3)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.For(V.Local.iCnt,1,3,1)
			F.Intrinsic.Date.BeginningOfMonth(V.Local.dMaxDate,V.Global.dMonth[V.Local.iCnt]Beg)
			F.Intrinsic.Date.EndOfMonth(V.Global.dMonth[V.Local.iCnt]Beg,V.Global.dMonth[V.Local.iCnt]End)
			F.Intrinsic.Date.DateAdd("M",-1,V.Local.dMaxDate,V.Local.dMaxDate)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.Else
		F.Intrinsic.Date.Day(V.Local.dMaxDate,V.Local.iDay)
		F.Intrinsic.Date.Month(V.Local.dMaxDate,V.Global.iMonth1)
		F.Intrinsic.Control.If(V.Local.iDay,>,V.Screen.FrmAging!txtMonthEnd.Text)
			F.Intrinsic.Math.Add(V.Global.iMonth1,1,V.Global.iMonth1)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Date.Year(V.Local.dMaxDate,V.Global.iYear1)
		F.Intrinsic.Control.If(V.Global.iMonth1,=,1)
			V.Global.iMonth2.Set(12)
			F.Intrinsic.Math.Sub(V.Global.iYear1,1,V.Global.iYear2)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Sub(V.Global.iMonth1,1,V.Global.iMonth2)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Global.iMonth2,=,1)
			V.Global.iMonth3.Set(12)
			F.Intrinsic.Math.Sub(V.Global.iYear1,1,V.Global.iYear2)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Sub(V.Global.iMonth2,1,V.Global.iMonth3)
		F.Intrinsic.Control.EndIf
		'Check Year
		V.Global.iYear2.Set(9999)
		F.Intrinsic.Control.For(V.Local.iCnt,1,3,1)
			F.Intrinsic.Control.If(V.Local.iCnt,<>,1)
				F.Intrinsic.Control.If(V.Global.iYear2,<>,9999)
					V.Global.iYear1.Set(V.Global.iYear2)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			'BeginningOfMonth
			F.Intrinsic.Math.Add(V.Screen.FrmAging!txtMonthEnd.Text,1,V.Local.iEndOfMonth)
			F.Intrinsic.String.Build("{0}{1}{2}",V.Global.iMonth[V.Local.iCnt].Format00,V.Local.iEndOfMonth.Format00,V.Global.iYear1,V.Local.sDate)
			F.Intrinsic.Date.ConvertDString(V.Local.sDate,"MM/DD/YYYY",V.Global.dMonth[V.Local.iCnt]Beg)
			F.Intrinsic.Date.DateAdd("M",-1,V.Global.dMonth[V.Local.iCnt]Beg,V.Global.dMonth[V.Local.iCnt]Beg)
			'EndOfMonth
			V.Local.iEndOfMonth.Set(V.Screen.FrmAging!txtMonthEnd.Text)
			F.Intrinsic.String.Build("{0}{1}{2}",V.Global.iMonth[V.Local.iCnt].Format00,V.Local.iEndOfMonth.Format00,V.Global.iYear1,V.Local.sDate)
			F.Intrinsic.Date.ConvertDString(V.Local.sDate,"MM/DD/YYYY",V.Global.dMonth[V.Local.iCnt]End)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.CallSub(loadgvaging)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDTAge.End

Program.Sub.loadGVAging.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sColumn.Declare
	V.Local.sCaption.Declare

	Gui.FrmAging.GSGCAging.AddGridviewFromDataTable("gvAging","dtAging")
	Gui.FrmAging.GSGCAging.MainView("gvAging")
	Gui.FrmAging.GSGCAging.SuspendLayout()
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","MultiSelect",True)
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","OptionBehaviorEditable",True)
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","AllowSort",True)
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","AllowFilter",True)
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","OptionsDetailShowDetailTabs",False)
	Gui.FrmAging.GSGCAging.SetGridViewProperty("gvAging","OptionsViewShowGroupPanel",True)

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ZERO","Visible",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AGE_CASH","Visible",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AGE_CASH2","Visible",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTINV","Visible",False)

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","ShowCaption",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","ShowCaption",False)

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","Caption","Cust. No.")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","Caption","Customer Name")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","INVOICE","Caption","Invoice")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","Caption","Invoice Date")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","Caption","Transction Date")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","Caption","Due Date")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","TYPE","Caption","Type")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","REFERENCE","Caption","Reference")
	F.Intrinsic.String.Build("Amount ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","Caption",V.Local.sCaption)
	'Set Month Captions
	F.Intrinsic.Control.For(V.Local.iCnt,1,3,1)
		F.Intrinsic.String.Build("MONTH{0}",V.Local.iCnt,V.Local.sColumn)
		F.Intrinsic.String.Build("{0} ({1})",V.Global.sMonthNames(V.Global.iMonth[V.Local.iCnt]),V.Company.CurrencySymbol,V.Local.sCaption)
		Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging",V.Local.sColumn,"Caption",V.Local.sCaption)
		Gui.FrmAging.lblMonth[V.Local.iCnt].Caption(V.Global.sMonthNames(V.Global.iMonth[V.Local.iCnt]))
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.String.Build("Prior ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","Caption",V.Local.sCaption)
	F.Intrinsic.String.Build("Not Aged ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","Caption",V.Local.sCaption)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","COLUMN1","Caption","Column")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","Caption","Adjust")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","Caption","Cash Receipt")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","INVOICE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","TYPE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","REFERENCE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH1","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","COLUMN1","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","AllowEdit",False)
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","AllowEdit",False)

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","MinWidth","65")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","MinWidth","180")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","INVOICE","MinWidth","95")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","MinWidth","70")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","MinWidth","85")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","MinWidth","85")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","TYPE","MinWidth","75")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","REFERENCE","MinWidth","95")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","MinWidth","85")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH1","MinWidth","95")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","MinWidth","95")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","MinWidth","95")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","MinWidth","85")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","MinWidth","100")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","COLUMN1","MinWidth","45")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","MinWidth","45")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","MinWidth","45")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","HeaderHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","INVOICE","HeaderHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","TYPE","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","REFERENCE","HeaderHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH1","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","COLUMN1","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","HeaderHAlignment","Center")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","CellHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","INVOICE","CellHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","TYPE","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","REFERENCE","CellHAlignment","Near")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH1","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","CellHAlignment","Far")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","COLUMN1","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","CellHAlignment","Center")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","CellHAlignment","Center")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","AMT_INVOICE","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH1","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_INVOICE","DisplayCustomDatetime","d")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DATE_TRANSACTION","DisplayCustomDatetime","d")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","DUE_DATE","DisplayCustomDatetime","d")
	
	'G Mansur 08/15/2023: Forcing text to be black
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","HeaderForeColor","Black")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","HeaderForeColor","Black")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","HeaderForeColor","Black")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","HeaderForeColor","Black")
	'====

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH2","HeaderBackColor","LightYellow")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","MONTH3","HeaderBackColor","LightSalmon")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PRIOR","HeaderBackColor","LightPink")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NOT_AGED","HeaderBackColor","LightSteelBlue")
	
	'G Mansur 08/15/2023: Forcing text to be black
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","CellForeColor","Black")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","CellForeColor","Black")
	'===
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","CUSTOMER","CellBackColor","White")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","NAME_CUSTOMER","CellBackColor","White")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","CellBackColor","Gray")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","CellBackColor","Gray")

	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","ADJUST","CellForeColor","White")
	Gui.FrmAging.GSGCAging.SetColumnProperty("gvAging","PAY","CellForeColor","White")

	Gui.FrmAging.GSGCAging.ResumeLayout()

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.loadGVAging.End

Program.Sub.GSGCAging_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.sType.Declare
	V.Local.sInvoice.Declare

	F.Intrinsic.Control.If(V.Screen.FrmAging!optEdit.Value)
		F.Intrinsic.Control.SelectCase(V.Args.Column)
			F.Intrinsic.Control.Case("ADJUST")
				F.Global.General.LaunchMenuTask(93,2,V.Local.iRet)
			F.Intrinsic.Control.Case("PAY")
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","TYPE",V.Args.RowIndex,V.Local.sType)
				F.Intrinsic.Control.If(V.Local.sType,=,"Invoice")
					F.Global.General.LaunchMenuTask(93,2,V.Local.iRet)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Case("INVOICE")
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","TYPE",V.Args.RowIndex,V.Local.sType)
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","Invoice",V.Args.RowIndex,V.Local.sInvoice)
				F.Intrinsic.Control.SelectCase(V.Local.sType)
					F.Intrinsic.Control.CaseAny("Invoice","Cash","Credit Memo")
						F.Global.General.CallWrapperASync(200700,V.Local.sInvoice)
				F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.SelectCase(V.Args.Column)
			F.Intrinsic.Control.Case("INVOICE")
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","TYPE",V.Args.RowIndex,V.Local.sType)
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","Invoice",V.Args.RowIndex,V.Local.sInvoice)
				F.Intrinsic.Control.SelectCase(V.Local.sType)
					F.Intrinsic.Control.CaseAny("Invoice","Cash","Credit Memo")
						F.Global.General.CallWrapperASync(200700,V.Local.sInvoice)
				F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCAging_RowCellClick.End

Program.Sub.GSGCAging_ColumnFilterChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.bFilter.Declare	
	V.Local.sFilter.Declare
	V.Local.sInvalid.Declare
	V.Local.bRet.Declare
	V.Local.iCnt.Declare
	V.Local.iCounter.Declare(Long,0)
	V.Local.sMsg.Declare

	F.Intrinsic.String.Split("StartsWith*!*Between*!*Contains*!*EndsWith*!*IsNullOrEmpty*!*?*!*IsOutlookInterval","*!*",V.Local.sInvalid)
	F.Intrinsic.String.IsNullOrWhiteSpace(V.Args.ActiveFilterExpression,V.Local.bFilter)
	Function.Intrinsic.Control.If(V.Local.bFilter,=,True)
		F.Intrinsic.Control.CallSub(settotals,"Load","Filter","Filter","")
	Function.Intrinsic.Control.Else
		F.Intrinsic.String.Replace(V.Args.ActiveFilterExpression,"[","",V.Local.sFilter)
		F.Intrinsic.String.Replace(V.Local.sFilter,"]","",V.Local.sFilter)

		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sInvalid.UBound,1)
			F.Intrinsic.String.IsInString(V.Local.sFilter,V.Local.sInvalid(V.Local.iCnt),False,V.Local.bRet)
			F.Intrinsic.Control.If(V.Local.bRet,=,True)
				F.Intrinsic.Math.Add(V.Local.iCounter,1,V.Local.iCounter)
			F.Intrinsic.Control.endif
		F.Intrinsic.Control.Next(V.Local.iCnt)

		F.Intrinsic.Control.If(V.Local.iCounter,=,1)
			Function.Intrinsic.String.Build("Grid will be filtered, but totals will not be recalculated, because one of the filters entered is an invalid filter for recalculating totals.{0}{0}Invalid Filters for recalculating totals:{0}- Is between{0}- Is not between{0}- Contains{0}- Does not contain{0}- Beings with{0}- Ends with{0}- Is blank{0}- Is not blank{0}- ?{0}- Calendar Checkboxes",V.Ambient.NewLine,V.Local.sMsg)
			Function.Intrinsic.UI.Msgbox(V.Local.sMsg,"Filter Validation")
		F.Intrinsic.Control.ElseIf(V.Local.iCounter,>,1)
			Function.Intrinsic.String.Build("Grid will be filtered, but totals will not be recalculated, because more than one filter entered is an invalid filter for recalculating totals.{0}{0}Invalid Filters for recalculating totals:{0}- Is between{0}- Is not between{0}- Contains{0}- Does not contain{0}- Beings with{0}- Ends with{0}- Is blank{0}- Is not blank{0}- ?{0}- Calendar Checkboxes",V.Ambient.NewLine,V.Local.sMsg)
			Function.Intrinsic.UI.Msgbox(V.Local.sMsg,"Filter Validation")
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.CallSub(settotals,"Load","Filter","Filter",V.Local.sFilter)
		F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCAging_ColumnFilterChanged.End

Program.Sub.ARAging.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.fAmtInvoice.Declare
	V.Local.dDateInvoice.Declare
	V.Local.sType.Declare
	V.Local.bAgeCash.Declare
	V.Local.bAgeCash2.Declare

	Gui.FrmAging.lblStatus.Caption("Aging AR....")
	Gui.FrmAging.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataTable.dtAging.RowCount,=,0)
		Gui.FrmAging.pbStatus.Max(100)
		Gui.FrmAging.pbStatus.Value(100)
	F.Intrinsic.Control.Else
		Gui.FrmAging.pbStatus.Max(V.DataTable.dtAging.RowCount)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtAging.RowCount--,1)
		Gui.FrmAging.pbStatus.Value(V.Local.iCnt)
		Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","AMT_INVOICE",V.Local.iCnt,V.Local.fAmtInvoice)
		Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","TYPE",V.Local.iCnt,V.Local.sType)
		Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","DATE_INVOICE",V.Local.iCnt,V.Local.dDateInvoice)

		F.Intrinsic.Control.SelectCase(V.Local.sType)
			F.Intrinsic.Control.CaseAny("Invoice","Adjustment","Credit Memo","Fin. Charge","Exch. Var.")
				Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",2,V.Local.iCnt,"ForeColor","Blue")
				Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"ForeColor","White")
				Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"BackColor","Gray")
				Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"Halignment","Center")
				Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","PAY",V.Local.iCnt,"Cash Receipt")
				F.Intrinsic.Control.If(V.Global.dMonth1Beg,<=,V.Local.dDateInvoice)
				F.Intrinsic.Control.AndIf(V.Global.dMonth1End,>=,V.Local.dDateInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH1",V.Local.iCnt,V.Local.fAmtInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,1)
				F.Intrinsic.Control.ElseIf(V.Global.dMonth2Beg,<=,V.Local.dDateInvoice)
				F.Intrinsic.Control.AndIf(V.Global.dMonth2End,>=,V.Local.dDateInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH2",V.Local.iCnt,V.Local.fAmtInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,2)
					Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightYellow")
				F.Intrinsic.Control.ElseIf(V.Global.dMonth3Beg,<=,V.Local.dDateInvoice)
				F.Intrinsic.Control.AndIf(V.Global.dMonth3End,>=,V.Local.dDateInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH3",V.Local.iCnt,V.Local.fAmtInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,3)
					Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightSalmon")
				F.Intrinsic.Control.Else
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","PRIOR",V.Local.iCnt,V.Local.fAmtInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,4)
					Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightPink")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Case("Cash")
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","AGE_CASH",V.Local.iCnt,V.Local.bAgeCash)
				Gui.FrmAging.GSGCAging.GetCellValueByColumnName("gvAging","AGE_CASH2",V.Local.iCnt,V.Local.bAgeCash2)
				F.Intrinsic.Control.If(V.Local.bAgeCash,=,True,OR,V.Local.bAgeCash2,=,True)
					Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",2,V.Local.iCnt,"ForeColor","Blue")
					Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"ForeColor","White")
					Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"BackColor","Gray")
					Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",16,V.Local.iCnt,"Halignment","Center")
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","PAY",V.Local.iCnt,"Cash Receipt")
					F.Intrinsic.Control.If(V.Global.dMonth1Beg,<=,V.Local.dDateInvoice)
					F.Intrinsic.Control.AndIf(V.Global.dMonth1End,>=,V.Local.dDateInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH1",V.Local.iCnt,V.Local.fAmtInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,1)
					F.Intrinsic.Control.ElseIf(V.Global.dMonth2Beg,<=,V.Local.dDateInvoice)
					F.Intrinsic.Control.AndIf(V.Global.dMonth2End,>=,V.Local.dDateInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH2",V.Local.iCnt,V.Local.fAmtInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,2)
						Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightYellow")
					F.Intrinsic.Control.ElseIf(V.Global.dMonth3Beg,<=,V.Local.dDateInvoice)
					F.Intrinsic.Control.AndIf(V.Global.dMonth3End,>=,V.Local.dDateInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","MONTH3",V.Local.iCnt,V.Local.fAmtInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,3)
						Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightSalmon")
					F.Intrinsic.Control.Else
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","PRIOR",V.Local.iCnt,V.Local.fAmtInvoice)
						Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,4)
						Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightPink")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					Gui.FrmAging.GSGCAging.SetCellAppearance("gvAging",2,V.Local.iCnt,"ForeColor","Blue")
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","NOT_AGED",V.Local.iCnt,V.Local.fAmtInvoice)
					Gui.FrmAging.GSGCAging.SetCellValueByColumnName("gvAging","COLUMN1",V.Local.iCnt,5)
					Gui.FrmAging.GSGCAging.SetRowAppearance("gvAging",V.Local.iCnt,"BackColor","LightSteelBlue")
				F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndSelect	
	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.ARAging.End

Program.Sub.LoadDtOverdue.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare

	Gui.FrmAging.lblStatus.Caption("Loading Overdue Invoices....")

	F.Intrinsic.Control.If(V.DataTable.dtOverdue.Exists)
		F.Data.DataTable.close("dtOverdue")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtOverdue","con","Select Distinct A.Customer,B.Name_Customer,A.Invoice,A.Due_Date,(Select Sum(Amt_Invoice) From V_AR_Open_Items Where Customer = A.Customer And Invoice = A.Invoice) As Amt_Invoice,Convert(0,SQL_INTEGER) AS Days_Late,C.note_1,'Print' As Print_Invoice,'Print' As Print_Statement,'View' As Open_Item_Notes,'Email' As Email_Invoice From V_AR_Open_Items A Left Join V_Customer_Master B On A.Customer = B.Customer Left Join GAB_4544_OVDUE_INVC C On A.Invoice = C.Invoice Where A.Due_Date < CurDate() And Due_Date <> '1900-1-1' And Amt_Invoice > 0 Order By A.Invoice;",True)
	
	F.Intrinsic.Control.CallSub(LoadGvOverdue)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtOverdue.End

Program.Sub.LoadGvOverdue.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.bExists.Declare
	V.Local.iCnt.Declare
	V.Local.dDate.Declare
	V.Local.iDays.Declare
	V.Local.sFilter.Declare
	V.Local.sCaption.Declare

	Gui.FrmAging.GSGCOverdue.AddGridViewFromDataTable("gvOverdue","dtOverdue")
	Gui.FrmAging.GSGCOverdue.MainView("gvOverdue")
	Gui.FrmAging.GSGCOverdue.SuspendLayout()
	Gui.FrmAging.GSGCOverdue.SetGridViewProperty("gvOverdue","OptionsViewShowGroupPanel",True)
	Gui.FrmAging.GSGCOverdue.SetGridViewProperty("gvOverdue","MultiSelect",False)
	Gui.FrmAging.GSGCOverdue.SetGridViewProperty("gvOverdue","OptionsMenuShowAutoFilterRowItem",False)

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Customer","Caption","Customer No.")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","name_customer","Caption","Customer Name")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Invoice","Caption","Invoice")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","Caption","Due Date")
	F.Intrinsic.String.Build("Invoice Balance ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","Caption",V.Local.sCaption)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","Caption","Days Late")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","Caption","Invoice Notes")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","Caption","Print Invoice")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","Caption","Print Statement")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","Caption","Open Item Notes")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","Caption","Email Invoice")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Invoice","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","AllowEdit",True)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","name_customer","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Customer","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","AllowEdit",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","AllowEdit",False)

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","ReadOnly",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","ReadOnly",True)

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","AllowSort",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","AllowSort",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","AllowSort",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","AllowSort",False)
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","AllowSort",True)

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","MinWidth","120")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","name_customer","MinWidth","120")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Invoice","MaxWidth","80")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","MaxWidth","150")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","MaxWidth","80")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","MaxWidth","100")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","MaxWidth","100")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Customer","MaxWidth","100")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","MaxWidth","100")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","MaxWidth","100")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Invoice","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","HeaderHAlignment","Far")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Customer","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","HeaderHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","HeaderHAlignment","Center")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Invoice","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","CellHAlignment","Left")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Customer","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","CellHAlignment","Center")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Days_Late","CellHAlignment","Center")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","amt_invoice","DisplayCustomNumeric","###,###,##0.00")
	
	'G Mansur 08/15/2023: Forcing text to be black
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","CellForeColor","Black")
	'===
	
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","CellBackColor","Gray")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","CellBackColor","Gray")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","note_1","CellBackColor","LightYellow")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","CellBackColor","Gray")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Invoice","CellForeColor","White")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Print_Statement","CellForeColor","White")
	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Open_Item_Notes","CellForeColor","White")

	Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","due_date","DisplayCustomDatetime","d")

	F.ODBC.Connection!con.TableExists("PPT_EINV_COPT",V.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists)
		v.Global.sInvoiceMode.Set("S")
	f.Intrinsic.Control.Else
		F.ODBC.Connection!con.TableExists("ATG_CUSTOMER_EMAIL",V.Local.bExists)
		f.Intrinsic.Control.If(v.Local.bExists)
			v.Global.sInvoiceMode.Set("C")
		f.Intrinsic.Control.Else
			v.Global.sInvoiceMode.Set("N")
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(v.Global.sInvoiceMode,=,"N")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","Visible",false)		
	Function.Intrinsic.Control.Else
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","HeaderHAlignment","Center")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","CellHAlignment","Center")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","MaxWidth","100")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","AllowEdit",false)
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","CellBackColor","Gray")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","CellForeColor","White")
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","AllowSort",false)
		Gui.FrmAging.GSGCOverdue.SetColumnProperty("gvOverdue","Email_Invoice","AllowFilter",false)
	Function.Intrinsic.Control.EndIf

	'Calculate the days late
	f.Intrinsic.Control.For(v.Local.iCnt,0,V.DataTable.dtOverdue.RowCount--,1)
		Gui.FrmAging.GSGCOverdue.GetCellValueByColumnName("gvOverdue","due_date",v.Local.iCnt,v.Local.dDate)
		F.Intrinsic.Date.WorkdaysBetweenDates(v.Local.dDate,v.Ambient.Date,127,v.Local.iDays)
		Gui.FrmAging.GSGCOverdue.SetCellValueByColumnName("gvOverdue","Days_Late",v.Local.iCnt,v.Local.iDays)
	f.Intrinsic.Control.Next(v.Local.iCnt)

	Gui.FrmAging.GSGCOverdue.ResumeLayout()

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvOverdue.End

Program.Sub.GSGCOverdue_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sPar.Declare
	V.Local.sPar2.Declare
	V.Local.sInV.Declare
	V.Local.sCust.Declare

    Gui.FrmAging.GSGCOverdue.GetCellValueByColumnName("gvOverdue","Customer",V.Args.RowIndex,V.local.sCust)
    Gui.FrmAging.GSGCOverdue.GetCellValueByColumnName("gvOverdue","invoice",V.Args.RowIndex,V.Local.sInv)

    F.Intrinsic.Control.If(V.Args.Column,=,"Print_Invoice")
        Gui.FrmAging..Enabled(false)
        F.Global.General.CallWrapperSync(200700,V.Local.sInv)
        Gui.FrmAging..Enabled(true)

    F.Intrinsic.Control.ElseIf(V.Args.Column,=,"Print_Statement")
        F.Intrinsic.String.Build("{0}!*!{0}!*!{1}!*!Y!*!N!*!N!*!{2}!*!!*!!*!Y!*!N",V.Local.sCust,V.Ambient.Date.FormatMMDDYY,V.Ambient.Date.FormatMMDDYY,v.Local.sPar)
        F.Global.General.CallWrapperSync(3050,V.Local.sPar)

	F.Intrinsic.Control.ElseIf(V.Args.Column,=,"Open_Item_Notes")
		Gui.FrmAging..Enabled(false)
		F.Global.General.CallWrapperSync(100200,V.Local.sCust)
		Gui.FrmAging..Enabled(true)

	F.Intrinsic.Control.ElseIf(V.Args.Column,=,"Email_Invoice")
		f.Intrinsic.Control.If(v.Global.sInvoiceMode,=,"S")
			'Call standard eInvoice to email the invoice
			f.Intrinsic.String.Build("{0}\{1}",v.Caller.GasDir,"PPT_Einvoicing.g2u",v.Local.sProgram)
			Function.Global.General.SetPassedDataElement("DSHInvoice",v.Local.sInV.Trim)
			f.Global.General.CallAsyncGAS(v.Local.sProgram,v.Local.iPID)

		f.Intrinsic.Control.ElseIf(v.Global.sInvoiceMode,=,"C")
			F.ODBC.Connection!conA.TableExists("ATG_CUSTOMER_EMAIL",V.Local.bExists)'Check custom e-invoice
			f.Intrinsic.Control.If(v.Local.bExists)
				'Custom eInvoice process 
				F.Intrinsic.Control.CallSub(einvoicing)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCOverdue_RowCellClick.End

Program.Sub.GSGCOverdue_CellValueChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sInV.Declare
	V.Local.sDate.Declare
	V.Local.sUser.Declare
	V.Local.sSQL.Declare
	V.Local.sText.Declare

	Gui.FrmAging.GSGCOverdue.GetCellValueByColumnName("gvOverdue","invoice",V.Args.RowIndex,V.Local.sInv)
	F.Intrinsic.String.DateString(V.Ambient.Now,V.Local.sDate)
	V.Local.sUser.Set(V.Caller.User)
	F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sText)
	F.Intrinsic.String.Build("SELECT * FROM GAB_4544_OVDUE_INVC WHERE INVOICE = '{0}'",V.Local.sInv,V.Local.sSQL)
	F.ODBC.Connection!con.OpenLocalRecordsetRW("rstInvNotes",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.con!rstInvNotes.EOF,=,true)
		F.Intrinsic.String.Build("INSERT INTO GAB_4544_OVDUE_INVC(INVOICE,NOTE_1,CHANGE_DATE,CHANGE_USER) VALUES('{0}','{1}','{2}','{3}')",V.Local.sInv,V.Local.sText,V.Local.sDate,V.Local.sUser,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("UPDATE GAB_4544_OVDUE_INVC SET NOTE_1 = '{0}' WHERE INVOICE = '{1}'",V.Local.sText,V.Local.sInv,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstInvNotes.Close

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCOverdue_CellValueChanged.End

Program.Sub.GSGCOverdue_ColumnFilterChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.bFilter.Declare	
	V.Local.sFilter.Declare
	V.Local.sInvalid.Declare
	V.Local.bRet.Declare
	V.Local.iCnt.Declare
	V.Local.iCounter.Declare
	V.Local.sMsg.Declare

	F.Intrinsic.String.Split("StartsWith*!*Between*!*Contains*!*EndsWith*!*IsNullOrEmpty","*!*",V.Local.sInvalid)
	F.intrinsic.string.IsNullOrWhiteSpace(v.Args.ActiveFilterExpression,v.Local.bFilter)
	F.Intrinsic.Control.If(v.Local.bFilter,=,true)
		F.Intrinsic.Control.CallSub(total,"Filter","INVOICE LIKE '%%'")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Replace(v.Args.ActiveFilterExpression,"[","",v.local.sFilter)
		f.Intrinsic.String.Replace(v.Local.sFilter,"]","",v.Local.sFilter)

			F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sInvalid.UBound,1)
			F.Intrinsic.String.IsInString(V.Local.sFilter,V.Local.sInvalid(V.Local.iCnt),False,V.Local.bRet)
			F.Intrinsic.Control.If(V.Local.bRet,=,True)
				F.Intrinsic.Math.Add(V.Local.iCounter,1,V.Local.iCounter)
			F.Intrinsic.Control.endif
		F.Intrinsic.Control.Next(V.Local.iCnt)

		F.Intrinsic.Control.If(V.Local.iCounter,=,1)
			F.Intrinsic.String.Build("Grid will be filtered, but totals will not be recalculated, because one of the filters entered is an invalid filter for recalculating totals.{0}{0}Invalid Filters for recalculating totals:{0}- Is between{0}- Is not between{0}- Contains{0}- Does not contain{0}- Beings with{0}- Ends with{0}- Is blank{0}- Is not blank",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Filter Validation")
		F.Intrinsic.Control.ElseIf(V.Local.iCounter,>,1)
			F.Intrinsic.String.Build("Grid will be filtered, but totals will not be recalculated, because more than one filter entered is an invalid filter for recalculating totals.{0}{0}Invalid Filters for recalculating totals:{0}- Is between{0}- Is not between{0}- Contains{0}- Does not contain{0}- Beings with{0}- Ends with{0}- Is blank{0}- Is not blank",V.Ambient.NewLine,V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Filter Validation")
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.CallSub(total,"Filter",v.Local.sFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCOverdue_ColumnFilterChanged.End

Program.Sub.Total.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.fTotal.Declare
	V.local.sTotal.Declare

	F.Data.DataTable.Compute("dtOverdue","SUM(AMT_INVOICE)",V.Args.Filter,v.Local.fTotal)

	F.Intrinsic.String.Format(v.Local.fTotal,"#,###,###,##0.00",v.Local.sTotal)
	Gui.FrmAging.txtTot.Text(v.Local.sTotal)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Total.End

Program.Sub.frameAllCust_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frameAllCust_DblClick.End

Program.Sub.frameODCust_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frameODCust_DblClick.End

Program.Sub.frmAgingChart_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmAging..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmAgingChart_UnLoad.End

Program.Sub.frmAllCust_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmAllCust_UnLoad.End

Program.Sub.frmODCust_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmODCust_UnLoad.End

Program.Sub.frameAging_DblClick1.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmAging..Visible(True)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frameAging_DblClick1.End

Program.Sub.EmailInvoice.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sQuery.Declare(String)
	V.Local.sContacts.Declare(String)
	V.Local.sContacts.Redim(-1,-1)
	V.Local.sDelete.Declare(String)
	V.Local.sDelete.Redim(-1,-1)
	V.Local.iUB.Declare(Long,-1)
	V.Local.bExists.Declare(Boolean)
	V.Local.iC.Declare(Long)
	V.Local.iEmailSalesRep.Declare(Long,-1)
	V.Local.sEmail.Declare(String)
	V.local.sTemp.Declare(String)
	V.Local.iUserID.Declare
	V.Local.sUserName.Declare(String)
	V.Local.sUserEmail.Declare(String)
	V.Local.iRecord.Declare(Long,-1)
	V.Local.sInvoicePath.Declare(String)
	V.Local.sBody.Declare(String)
	V.Local.sSubject.Declare(String)
	V.Local.sFile.Declare(String)
	V.Local.bFileExists.Declare(Boolean)
	V.Local.iType.Declare(Long)

	F.Intrinsic.Control.CallSub(setcontacts)
	F.Intrinsic.Control.CallSub(checkcontacts)
	v.Local.iType.Set(v.Args.iType)

	F.Global.Security.GetUserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iUserID)

	'Get all customer contacts and build array
	F.Intrinsic.Control.If(v.Local.iType,=,0)
		F.Intrinsic.String.Build("SELECT EMAIL1, NAME FROM CONTACT WHERE TYPE = 'C' AND CUST = '{0}'",v.Global.sCust,v.Local.sQuery)
		f.ODBC.Connection!con.OpenRecordsetRO("rstCust",v.Local.sQuery)
		F.Intrinsic.Control.DoUntil(v.ODBC.con!rstCust.EOF,=,true)
			F.Intrinsic.Math.Add(v.Local.iUB,1,v.Local.iUB)
			F.Intrinsic.Control.If(v.Local.iUB,=,0)
				v.Local.sContacts.Redim(0,0)
			F.Intrinsic.Control.Else
				v.Local.sContacts.RedimPreserve(0,v.Local.iUB)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Concat(v.ODBC.con!rstCust.FieldValTrim!EMAIL1,"*!*",v.ODBC.con!rstCust.FieldValTrim!NAME,v.Local.sTemp)
			v.Local.sContacts(v.Local.iUB).Set(v.Local.sTemp)
			f.ODBC.con!rstCust.MoveNext
		F.Intrinsic.Control.Loop
		f.ODBC.con!rstCust.Close
	F.Intrinsic.Control.EndIf

	Gui.frmEInvoice.progressBar1.Value(30)

	v.Local.iUB.Set(-1)
	F.Intrinsic.String.Build("SELECT * FROM ATG_CUSTOMER_EMAIL WHERE CUSTOMER='{0}'",v.Global.sCust,v.Local.sQuery)
	f.ODBC.Connection!con.OpenRecordsetRW("rstCust",v.Local.sQuery)
	F.Intrinsic.Control.DoUntil(v.ODBC.con!rstCust.EOF,=,true)
		F.Intrinsic.Control.If(v.Local.iEmailSalesRep,=,-1)
			'generate invoice PDF
			F.Intrinsic.String.Build("SELECT ORDER_NO FROM ORDER_HIST_HEAD WHERE INVOICE = '{0}'",v.Global.sInv,v.Local.sQuery)
			f.ODBC.Connection!con.OpenRecordsetRO("rstOrder",v.Local.sQuery)
			F.Intrinsic.Control.If(v.ODBC.con!rstOrder.EOF,=,false)
				v.Global.sOrderNo.Set(v.ODBC.con!rstorder.FieldValTrim!ORDER_NO)
					'get email body text
					F.Intrinsic.Control.CallSub(emailbody)
					v.Local.sBody.Set(v.Args.sBody)
					v.Local.sSubject.Set(v.Args.sSubject)
					F.Intrinsic.Control.CallSub(processinv)
					v.Local.sInvoicePath.Set(v.Args.sAttach)
				F.Intrinsic.Control.Else
					F.Intrinsic.UI.Msgbox("Unable to find order number.  Please contact Global Shop.","e-Invoicing")
				F.Intrinsic.Control.EndIf
				f.ODBC.con!rstOrder.Close

				Gui.frmEInvoice.progressBar1.Value(50)

				F.Intrinsic.Control.If(v.ODBC.con!rstCust.FieldValTrim!SALES_EMAIL,=,true)
					v.Local.iEmailSalesRep.Set(1)
					F.Intrinsic.String.Build("SELECT S.SALESPERSON AS EMAIL, N.SALESPERSON FROM SALESPEOPLE S, CUSTOMER_MASTER C, V_SALESPEOPLE N WHERE N.SALESPERSON_CODE=S.SALESPERSON_CODE AND C.SALESPERSON=S.SALESPERSON_CODE AND C.CUSTOMER = '{0}' AND S.KEY1='AR2' AND S.KEY2='SLM'",v.Global.sCust,v.Local.sQuery)
					f.ODBC.Connection!con.OpenRecordsetRO("rstSalesPerson",v.Local.sQuery)
					F.Intrinsic.Control.If(v.ODBC.con!rstSalesperson.EOF,=,false)
						F.Intrinsic.Debug.SetLA("Emailing Sales Rep: ",v.ODBC.con!rstSalesperson.FieldValTrim!SALESPERSON," email: ",v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL)
						F.Intrinsic.Control.If(v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL,<>,"")
'							F.Global.Messaging.CreateEMmessage(to email, to name, sender email, sender name, subject, body, attachment)
'							F.Global.Messaging.CreateEMMessage(v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL,v.ODBC.con!rstSalesperson.FieldValTrim!SALESPERSON,v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL,v.ODBC.con!rstSalesperson.FieldValTrim!SALESPERSON,v.Local.sSubject,v.Local.sBody,v.Local.sInvoicePath,false)
'							F.Global.Messaging.QueueMessage(sCoCode, iUserID, CallingPrgm, Subject, SenderEmail*!*sSenderName, Recipients, Body, Mode, sReplyToAddress, bReadReceipt, sAdditionalHeaders, dateDeferredDelivery, sMeta0, sMeta1, sMeta2, sMeta3, sMeta4, AttachmentFileName*!*AttachmentFilePath, bDeleteAttach)
							F.Intrinsic.String.Build("{0}*!*{1}",v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL,v.ODBC.con!rstSalesperson.FieldValTrim!SALESPERSON,V.Local.sUserEmail)
							F.Intrinsic.String.Build("{0}.pdf*!*{1}\Invoices\",v.Global.sInv,V.Caller.PluginsDir,v.Local.sInvoicePath)
							F.Intrinsic.String.Concat(v.Caller.PluginsDir,"\Invoices\",v.Global.sInv,".pdf",v.Local.sAttach)
							F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUserID,"",v.Local.sSubject,V.Local.sUserEmail,v.ODBC.con!rstSalesperson.FieldValTrim!EMAIL,v.Local.sBody,"","",False,"",,"","","","","",v.Local.sInvoicePath,False)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					v.Local.iEmailSalesRep.Set(0)
'					f.ODBC.con!rstSalesperson.Close
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf

			'check to see if contact in ATG_CUSTOMER_EMAIL is still a contact for customer in CRM.  If not, email will not be sent to that contact
			F.Intrinsic.Control.If(v.Local.iType,=,0)
				v.Local.bExists.Set(false)
					F.Intrinsic.Control.For(v.Local.iC,0,v.Local.sContacts.UBound,1)
						F.Intrinsic.String.Split(v.Local.sContacts(v.Local.iC).Trim,"*!*",v.Local.sTemp)
						F.Intrinsic.Control.If(v.ODBC.con!rstCust.FieldValTrim!CUST_EMAIL,=,v.Local.sTemp(0))
							v.Local.bExists.Set(true)
							F.Intrinsic.Control.ExitFor(v.Local.iC)
						F.Intrinsic.Control.EndIf
					f.Intrinsic.Control.Next(v.Local.iC)
				F.Intrinsic.Control.Else
					v.Local.bExists.Set(true)
					v.Local.sTemp.Redim(0,1)
					v.Local.sTemp(0).Set(v.ODBC.con!rstCust.FieldValTrim!CUST_EMAIL)
					v.Local.sTemp(1).Set(v.ODBC.con!rstCust.FieldValTrim!CUST_EMAIL)
			F.Intrinsic.Control.EndIf

			Gui.frmEInvoice.progressBar1.Value(75)

		F.Intrinsic.Control.If(v.Local.bExists,=,true)
			'email
			F.Global.Security.GetFullName(v.Caller.User,v.Local.sUserName)
			F.Global.Security.GetUserEmail(v.Caller.User,v.Local.sUserEmail)
			F.Intrinsic.Control.If(v.Local.sUserEmail,=,"")
				v.local.sUserName.Set(v.Local.sTemp(1))
				v.Local.sUserEmail.Set(v.Local.sTemp(0))
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sUserEmail,V.Local.sUserName,V.Local.sUserEmail)
			F.Intrinsic.Control.EndIf

			F.Intrinsic.String.Build("{0}.pdf*!*{1}\Invoices\",v.Global.sInv,V.Caller.PluginsDir,v.Local.sInvoicePath)

'			F.Global.Messaging.CreateEMMessage(v.Local.sTemp(0),v.Local.sTemp(1),v.Local.sUserEmail,v.Local.sUserName,v.Local.sSubject,v.Local.sBody,v.Local.sInvoicePath,false)
'			F.Global.Messaging.QueueMessage(sCoCode, iUserID, CallingPrgm, Subject, SenderEmail*!*sSenderName, Recipients, Body, Mode, sReplyToAddress, bReadReceipt, sAdditionalHeaders, dateDeferredDelivery, sMeta0, sMeta1, sMeta2, sMeta3, sMeta4, AttachmentFileName*!*AttachmentFilePath, bDeleteAttach)
			F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.Local.iUserID,"",v.Local.sSubject,V.Local.sUserEmail,v.ODBC.con!rstCust.FieldValTrim!CUST_EMAIL,v.Local.sBody,"","",False,"","","","","","","",v.Local.sInvoicePath,False)
			'write record
			F.Intrinsic.Control.If(v.Local.iRecord,=,-1)
				f.Intrinsic.String.Trim(v.Global.sCust,v.Global.sCust)
				f.ODBC.Connection!con.OpenRecordsetRW("rstRecord","SELECT * FROM ATG_CUST_EMAIL_HIST")
				f.ODBC.con!rstRecord.AddNew
				f.ODBC.con!rstRecord.Set!CUSTOMER(v.Global.sCust)
				f.ODBC.con!rstRecord.set!INVOICE_NO(v.Global.sInv)
				f.ODBC.con!rstRecord.Set!EMAIL_DATE(v.Ambient.Now)
				f.ODBC.con!rstRecord.Update
				f.ODBC.con!rstRecord.Close
				v.Local.iRecord.Set(0)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Add(v.Local.iUB,1,v.Local.iUB)
			F.Intrinsic.Control.If(v.Local.iUB,=,0)
				v.Local.sDelete.Redim(0,0)
			F.Intrinsic.Control.Else
				v.Local.sDelete.RedimPreserve(0,v.Local.iUB)
			F.Intrinsic.Control.EndIf
			v.Local.sDelete(v.Local.iUB).Set(v.ODBC.con!rstCust.FieldValTrim!CUST_EMAIL)
		F.Intrinsic.Control.EndIf
		f.ODBC.con!rstCust.MoveNext
	F.Intrinsic.Control.Loop
	f.ODBC.con!rstCust.Close
	'f.ODBC.con!rstRecord.Close

	Gui.frmEInvoice.progressBar1.Value(95)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EmailInvoice.End

Program.Sub.ProcessInv.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sParamName.Declare(String)
	V.Local.sParamVal.Declare(String)
	V.Local.sTemp.Declare(String)
	V.Local.sPN.Declare(String)
	V.Local.sPV.Declare(String)
	V.Local.sCallParams.Declare(String)
	V.Local.sAttach.Declare(String)
	V.Local.sVersion.Declare(String)
	V.Local.iRptID.Declare(Long)
	V.Local.sPath.Declare(String)
	V.Local.bExists.Declare(Boolean)
	V.Local.bReportFound.Declare(Boolean)
	V.Local.sQuery.Declare(String)
	V.Local.sReport.Declare(String)

	F.Intrinsic.String.Concat(v.Caller.PluginsDir,"\Invoices\",v.Global.sInv,".pdf",v.Local.sAttach)
	F.Intrinsic.String.Left(v.Caller.GSSVersion,4,v.Local.sVersion)

	'process BI table
	F.Intrinsic.String.Build("{0}!*!|~|CRYSTAL-OVERRIDE|~|",v.Global.sInv,v.Local.sCallParams)
	F.Intrinsic.Debug.SetLA("Generating Invoice BI data.  Using Callwrapper 200900: ",v.Local.sCallParams)
	F.Global.General.CallWrapperSyncBIO(200900,v.Local.sCallParams)

	'get report id
	F.Intrinsic.String.concat("SELECT * FROM V_PRT_LASER_INVOICE WHERE INVOICE_NO='",V.Global.sInv,"'",V.Local.sQuery)
	F.ODBC.Connection!con.OpenRecordsetRO("rstReport",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.con!rstReport.EOF,<>,True)
		V.local.iRptID.set(V.ODBC.con!rstReport.fieldvaltrim!RPTID)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Unable to find Invoice Data.  Please contact Global Shop.")
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstReport.Close
	F.Intrinsic.Variable.AddRV("RptID",V.Local.iRptID)

	v.Local.bReportFound.Set(false)
	f.ODBC.Connection!con.TableExists("ATG_EINVOICE_CCC",v.Local.bExists)
	F.Intrinsic.Control.If(v.Local.bExists,=,true)
		F.Intrinsic.String.Concat("SELECT * FROM ATG_EINVOICE_CCC WHERE COMPANY_CODE = '",v.Caller.CompanyCode,"'",v.Local.sQuery)
		f.ODBC.Connection!con.OpenRecordsetRO("rstReport",v.Local.sQuery)
		F.Intrinsic.Control.If(v.ODBC.con!rstReport.EOF,=,false)
			v.Local.bReportFound.Set(true)
			F.Intrinsic.String.Concat("E-INVOICE-",v.Caller.CompanyCode,v.Local.sReport)
			v.Local.sPath.Set(v.ODBC.con!rstReport.FieldValTrim!REPORT_LOC)
			F.Intrinsic.File.Exists(v.Local.sPath,v.Local.bExists)
			F.Intrinsic.Control.If(v.Local.bExists,=,false)
				F.Intrinsic.String.Right(v.Local.sPath,4,v.Local.sTemp)
				F.Intrinsic.Control.If(v.Local.sTemp.UBound,<>,".RPT")
					F.Intrinsic.String.Concat(v.Local.sPath,".rpt",v.Local.sPath)
					F.Intrinsic.File.Exists(v.Local.sPath,v.Local.bExists)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(v.Local.bExists,=,true)
				f.Global.BI.InitializeReport(v.Local.sReport,v.Local.sPath,v.Local.iRptID)
				F.Intrinsic.Control.If(v.Local.iRptID,=,-1)
					F.Intrinsic.String.Concat("Unable to initialize a report for e-Invoicing in the following location setup for company code",v.Caller.CompanyCode," in ATG_EINVOICE_CCC: ", v.Local.sPath,". Please contact Global Shop support.",v.Local.sPath)
					F.Intrinsic.UI.Msgbox(v.Local.sPath,"e-Invoicing")
					F.Intrinsic.UI.Msgbox("Please set up e-Invoicing-CCC.rpt.  Please call Global Shop for more info.")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	f.ODBC.con!rstReport.Close
	F.Intrinsic.Control.EndIf

	V.Local.sPN.Set("REPORTID*!*TERMINAL*!*ORDERNO*!*PROGRAM*!*TRACK*!*IVCTYPE*!*PRTSHIP*!*PRTORD*!*IVCTYPE*!*PRTSHIP*!*PRTORD*!*INVOICE")
	F.Intrinsic.String.Concat("000055","*!*",V.caller.Terminal,"*!**!**!**!**!**!**!**!**!**!**!**!**!*",V.Local.sPV)

	F.Intrinsic.String.Split(v.Local.sPN,"*!*",v.Local.sParamName)
	F.Intrinsic.String.Split(v.Local.sPV,"*!*",v.Local.sParamVal)
	F.Global.BI.SaveReport(v.Local.iRptID,1,v.Local.sParamName,v.Local.sParamVal,v.Local.sAttach)
	F.Intrinsic.Variable.AddRV("sAttach",v.Local.sAttach)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.ProcessInv.End

Program.Sub.CheckContacts.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'Checks to see how e-Invoicing contacts were added.  iType=0 if added from ATG_AUTO_EMAIL_CUST.gas from CRM, iType=1 if using script button from Customer Master (ATG_Invoice_Delivery.gas)
	V.Local.sQuery.Declare(String)
	V.Local.iType.Declare(Long)

	V.Local.sQuery.Set("SELECT * FROM ATG_CUSTOMER_EMAIL WHERE CUSTOMER='-1'")
	F.ODBC.Connection!con.OpenRecordsetRO("rstCheck",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.con!rstCheck.EOF,=,True)
		V.Local.iType.Set(0)
	F.Intrinsic.Control.Else
		V.Local.iType.Set(1)
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstCheck.Close

	F.Intrinsic.Variable.AddRV("iType",V.Local.iType)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.CheckContacts.End

Program.Sub.EmailBody.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sFile.Declare(String)
	V.Local.sText.Declare(String)
	V.Local.bExists.Declare(Boolean)
	V.Local.sSubject.Declare(String)
	V.Local.sBody.Declare(String)

	F.Intrinsic.String.Concat(V.Caller.PluginsDir,"\GAB\GAS\eInvoicing_Body_Text.txt",V.Local.sFile)
	F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bExists)
	F.Intrinsic.Control.If(V.Local.bExists,=,True)
		F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sBody)
	F.Intrinsic.Control.Else
		V.Local.sBody.Set("Attached is your invoice.  Thank you.")
		F.Intrinsic.String.Concat("e-Invoice ",V.Global.sInv,V.Local.sSubject)
		F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sBody)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sText)
	F.Intrinsic.String.Replace(V.local.sText,"%INVOICE%",V.Global.sInv,V.Local.sText)
	F.Intrinsic.String.Replace(V.Local.sText,"%CUSTPO%",V.Global.sCustPO,V.Local.sText)
	F.Intrinsic.String.Replace(V.Local.sText,"%CUSTOMER%",V.Global.sCustomerName,V.Local.sText)
	F.Intrinsic.String.Replace(V.Local.sText,"%COMPANY%",V.Ambient.CompanyName,V.Local.sText)
	F.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)

	F.Intrinsic.Control.If(V.Local.sText.UBound,>,0)
		V.Local.sSubject.Set(V.Local.sText(0))
		V.Local.sBody.Set(V.Local.sText(1))
	F.Intrinsic.Control.Else
		V.Local.sBody.Set(V.Local.sText)
		F.Intrinsic.String.Concat("e-Invoice ",V.Global.sInv,V.Local.sSubject)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Variable.AddRV("sBody",V.Local.sBody)
	F.Intrinsic.Variable.AddRV("sSubject",V.Local.sSubject)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EmailBody.End

Program.Sub.GetCustInfo.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sQuery.Declare(String)

	F.Intrinsic.String.Concat("SELECT CUSTOMER_PO FROM V_ORDER_HEADER WHERE ORDER_NO='",V.Global.sOrderNo,"'",V.Local.sQuery)
	F.ODBC.Connection!con.OpenRecordsetRO("rstCustPO",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.con!rstCustPO.EOF,<>,True)
		V.Global.sCustPO.Set(V.ODBC.con!rstCustPO.FieldValTrim!CUSTOMER_PO)
	F.Intrinsic.Control.Else
		F.ODBC.con!rstCustPO.Close
		F.Intrinsic.String.LPad(V.Global.sOrderNo,"0",7,V.Local.sQuery)
		F.Intrinsic.String.Concat("SELECT CUSTOMER_PO FROM V_ORDER_HEADER WHERE ORDER_NO='",V.Local.sQuery,"'",V.Local.sQuery)
		F.ODBC.Connection!con.OpenRecordsetRO("rstCustPO",V.Local.sQuery)
		F.Intrinsic.Control.If(V.ODBC.con!rstCustPO.EOF,<>,True)
			V.Global.sCustPO.Set(V.ODBC.con!rstCustPO.FieldValTrim!CUSTOMER_PO)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstCustPO.Close

	F.Intrinsic.String.Concat("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER='",V.Global.sCust,"'",V.Local.sQuery)
	F.ODBC.Connection!con.OpenRecordsetRO("rstCustPO",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.con!rstCust.EOF,<>,True)
		V.Global.sCustomerName.Set(V.ODBC.con!rstCustPO.FieldValTrim!NAME_CUSTOMER)
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstCustPO.Close

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GetCustInfo.End

Program.Sub.SetContacts.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	'Sets e-Invoicing contacts method as iType=1 (See Check_eContacts_Meth sub).  iType=0 if added from ATG_AUTO_EMAIL_CUST.gas from CRM, iType=1 if using script button from Customer Master (ATG_Invoice_Delivery.gas)
	V.Local.sQuery.Declare(String)

	V.Local.sQuery.Set("SELECT * FROM ATG_CUSTOMER_EMAIL WHERE CUSTOMER='-1'")
	F.ODBC.Connection!con.OpenRecordsetRW("rstCheck",V.Local.sQuery)
	F.Intrinsic.Control.If(V.ODBC.con!rstCheck.EOF,=,True)
		F.ODBC.con!rstCheck.AddNew
		F.ODBC.con!rstCheck.Set!Customer("-1")
		F.ODBC.con!rstCheck.Set!Cust_email("-1")
		F.ODBC.con!rstCheck.Set!Sales_email(False)
		f.ODBC.con!rstCheck.Update
	F.Intrinsic.Control.EndIf
	F.ODBC.con!rstCheck.Close

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContacts.End

Program.Sub.UpdateATGCustEmail.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	v.Local.sEmail.Declare(string)
	v.Local.sCompany.Declare(string)
	v.Local.sQuery.Declare(string)
	v.Local.sQuery2.Declare(string)
	V.Local.sSQL.Declare(string)
	v.Local.sMessage.Declare(string)

	F.Intrinsic.String.Trim(v.Global.sCust,v.Global.sCust)

	F.Intrinsic.String.Build("SELECT * FROM ATG_CUSTOMER_EMAIL WHERE CUSTOMER = '{0}'",v.Global.sCust,v.Local.sQuery2)
	F.Intrinsic.String.Build("Contacts not set up for customer {0}.  Please set up contacts this customer in CRM.",v.Global.sCust,v.Local.sMessage)

	F.ODBC.Connection!con.OpenLocalRecordsetRW("rstB",v.Local.sQuery2)

	F.Intrinsic.Control.If(v.ODBC.con!rstB.EOF)
		F.Intrinsic.UI.Msgbox(v.Local.sMessage,"Invalid Contacts")
	F.Intrinsic.Control.EndIf

	F.ODBC.con!rstB.Close

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.UpdateATGCustEmail.End

Program.Sub.EInvoicing.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.FrmAging..Enabled(false)
	Gui.frmEInvoice..Visible(true)
	Gui.frmEInvoice.lbl1.Caption("Processing E-Invoice")
	F.Intrinsic.Control.CallSub(updateatgcustemail)
	Gui.frmEInvoice.progressBar1.Value(15)
	F.Intrinsic.Control.CallSub(emailinvoice)
	Gui.frmEInvoice.progressBar1.Value(90)
	Gui.frmEInvoice.progressBar1.Value(100)
	Gui.frmEInvoice..Visible(false)
	Gui.FrmAging..Enabled(true)
	Gui.FrmAging..Show(true)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.EInvoicing.End

Program.Sub.cmdExport_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)

	F.Intrinsic.Control.If(V.Screen.FrmAging!tabAR.Tab,=,0)
		F.Intrinsic.Control.If(V.Local.bExcel)
			F.Intrinsic.String.Build("{0}\GAB_4544_AR_Aging_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.FrmAging.GSGCAging.Export(V.Local.sFileExport,"xlsx")
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}\GAB_4544_AR_Aging_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.FrmAging.GSGCAging.Export(V.Local.sFileExport,"csv")
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ElseIf(V.Screen.FrmAging!tabAR.Tab,=,1)
		F.Intrinsic.Control.If(V.Local.bExcel)
			F.Intrinsic.String.Build("{0}\GAB_4544_Overdue_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.FrmAging.GSGCOverdue.Export(V.Local.sFileExport,"xlsx")
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}\GAB_4544_Overdue_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.FrmAging.GSGCOverdue.Export(V.Local.sFileExport,"csv")
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdExport_Click.End

Program.Sub.SetTotals.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.fAmt.Declare
	V.Local.sAmt.Declare
	V.Local.fMonth1.Declare
	V.Local.sMonth1.Declare
	V.Local.fMonth2.Declare
	V.Local.sMonth2.Declare
	V.Local.fMonth3.Declare
	V.Local.sMonth3.Declare
	V.Local.fPrior.Declare
	V.Local.sPrior.Declare
	V.Local.fNA.Declare
	V.Local.sNA.Declare

	F.Intrinsic.Control.SelectCase(V.Args.Load)
		F.Intrinsic.Control.Case("One")
			F.Data.DataTable.Compute("dtAging","SUM(AMT_INVOICE)","",V.Local.fAmt)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH1)","",V.Local.fMonth1)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH2)","",V.Local.fMonth2)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH3)","",V.Local.fMonth3)
			F.Data.DataTable.Compute("dtAging","SUM(PRIOR)","",V.Local.fPrior)
			F.Data.DataTable.Compute("dtAging","SUM(NOT_AGED)","",V.Local.fNA)
			F.Intrinsic.String.Format(V.Local.fAmt,"#,###,###,##0.00",V.Local.sAmt)
			Gui.FrmAging.txtAmt.Text(V.Local.sAmt)
			F.Intrinsic.String.Format(V.Local.fMonth1,"#,###,###,##0.00",V.Local.sMonth1)
			gui.FrmAging.txtMonth1.Text(V.Local.sMonth1)
			F.Intrinsic.String.Format(V.Local.fMonth2,"#,###,###,##0.00",V.Local.sMonth2)
			gui.FrmAging.txtMonth2.Text(V.Local.sMonth2)
			F.Intrinsic.String.Format(V.Local.fMonth3,"#,###,###,##0.00",V.Local.sMonth3)
			gui.FrmAging.txtMonth3.Text(V.Local.sMonth3)
			F.Intrinsic.String.Format(V.Local.fPrior,"#,###,###,##0.00",V.Local.sPrior)
			gui.FrmAging.txtPrior.Text(V.Local.sPrior)
			F.Intrinsic.String.Format(V.Local.fNA,"#,###,###,##0.00",V.Local.sNA)
			gui.FrmAging.txtNA.Text(V.Local.sNA)

		F.Intrinsic.Control.Case("Filter")
			F.Data.DataTable.Compute("dtAging","SUM(AMT_INVOICE)",V.Args.Filter,V.Local.fAmt)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH1)",V.Args.Filter,V.Local.fMonth1)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH2)",V.Args.Filter,V.Local.fMonth2)
			F.Data.DataTable.Compute("dtAging","SUM(MONTH3)",V.Args.Filter,V.Local.fMonth3)
			F.Data.DataTable.Compute("dtAging","SUM(PRIOR)",V.Args.Filter,V.Local.fPrior)
			F.Data.DataTable.Compute("dtAging","SUM(NOT_AGED)",V.Args.Filter,V.Local.fNA)
			F.Intrinsic.String.Format(V.Local.fAmt,"#,###,###,##0.00",V.Local.sAmt)
			Gui.FrmAging.txtAmt.Text(V.Local.sAmt)
			F.Intrinsic.String.Format(V.Local.fMonth1,"#,###,###,##0.00",V.Local.sMonth1)
			gui.FrmAging.txtMonth1.Text(V.Local.sMonth1)
			F.Intrinsic.String.Format(V.Local.fMonth2,"#,###,###,##0.00",V.Local.sMonth2)
			gui.FrmAging.txtMonth2.Text(V.Local.sMonth2)
			F.Intrinsic.String.Format(V.Local.fMonth3,"#,###,###,##0.00",V.Local.sMonth3)
			gui.FrmAging.txtMonth3.Text(V.Local.sMonth3)
			F.Intrinsic.String.Format(V.Local.fPrior,"#,###,###,##0.00",V.Local.sPrior)
			gui.FrmAging.txtPrior.Text(V.Local.sPrior)
			F.Intrinsic.String.Format(V.Local.fNA,"#,###,###,##0.00",V.Local.sNA)
			gui.FrmAging.txtNA.Text(V.Local.sNA)

	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetTotals.End

Program.Sub.picGSSLogo_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.picGSSLogo_DblClick.End

Program.Sub.frmWeb_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmWeb..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmWeb_UnLoad.End

Program.Sub.cmdGSS_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdGSS_Click.End

Program.Sub.cmdServ_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-service.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdServ_Click.End

Program.Sub.cmdUpd_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-updates.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdUpd_Click.End

Program.Sub.cmdResetGsGC_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
	F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 4544 And Seq = 1000;")
	F.ODBC.Connection!common.Close
	
	Gui.frmWeb..Visible(False)
	V.Global.bLoadData.Set(False)
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdResetGsGC_Click.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'gvAging
	Gui.FrmAging.GSGCAging.Serialize("gvAging",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVAGING",4544,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	'gvOverdue
	Gui.FrmAging.GSGCOverdue.Serialize("gvOverdue",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVOVERDUE",4544,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSerialize.Declare
	
	'Delete old registry records
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVAGING",4544,0,5,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
		F.ODBC.Connection!common.Execute("Delete From Gs_Registry Where Reg_ID = 4544 And Seq < 1000;")
		F.ODBC.Connection!common.Close
	F.Intrinsic.Control.EndIf

	'gvAging
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVAGING",4544,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmAging.GSGCAging.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	'gvOverdue
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"GVOVERDUE",4544,1000,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		Gui.FrmAging.GSGCOverdue.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Charts1.Start
	V.Local.fCurrent.Declare
	V.Local.f3059.Declare
	V.Local.f6090.Declare
	V.Local.fOver.Declare
	V.Local.sSeries.Declare

	Gui.FrmAging.gsChartAging.ClearChart

	F.Data.DataTable.Compute("dtAging","SUM(MONTH1)","",v.Local.fCurrent)
	f.Data.DataTable.Compute("dtAging","SUM(MONTH2)","",v.Local.f3059)
	F.Data.DataTable.Compute("dtAging","SUM(MONTH3)","",v.Local.f6090)
	F.Data.DataTable.Compute("dtAging","SUM(PRIOR)","",v.Local.fOver)
	
	F.Intrinsic.String.Build("{4}*!*{0}*!*{5}*!*{1}*!*{6}*!*{2}*!*{7}*!*{3}",v.Local.fCurrent,v.Local.f3059,v.Local.f6090,v.Local.fOver,V.Screen.FrmAging!lblMonth1.Caption,V.Screen.FrmAging!lblMonth2.Caption,V.Screen.FrmAging!lblMonth3.Caption,V.Screen.FrmAging!lblPrior.Caption,v.Local.sSeries)
	
	Gui.FrmAging.gsChartAging.CreateFunnelChart("AR Aging",v.Local.sSeries,0,2,3,2,False,False)

Program.Sub.Charts1.End

Program.Sub.Charts2.Start
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.sCustomer.Declare
	V.Local.sFilter.Declare
	V.Local.sSeries.Declare
	V.Local.fAmount.Declare
	V.Local.iVendors.Declare
	
	F.Data.DataView.Create("dtAging","dvAging")
	F.Data.DataView.ToDataTableDistinct("dtAging","dvAging","dtCust","NAME_CUSTOMER")
	F.Data.DataTable.AddColumn("dtCust","SUM",Float)
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtCust.RowCount--,1)
		F.Intrinsic.String.Replace(V.DataTable.dtCust(V.Local.iCnt).NAME_CUSTOMER!FieldVal,"'","''",V.Local.sCustomer)
		F.Intrinsic.String.Build("NAME_CUSTOMER = '{0}'",V.Local.sCustomer,V.Local.sFilter)
		F.Data.DataTable.Compute("dtAging","SUM(AMT_INVOICE)",V.Local.sFilter,V.Local.fAmount)
		F.Data.DataTable.SetValue("dtCust",V.Local.iCnt,"SUM",V.Local.fAmount)
	F.Intrinsic.Control.Next(v.Local.iCnt)
	
	F.Data.DataView.Create("dtCust","dvCust",22,"","SUM DESC")
	F.Data.DataView.ToDataTable("dtCust","dvCust","dtFunnel")
	
	F.Intrinsic.Control.If(V.DataTable.dtFunnel.RowCount,<=,10)
		V.Local.iVendors.Set(V.DataTable.dtFunnel.RowCount--)
	F.Intrinsic.Control.Else
		V.Local.iVendors.Set(9)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,v.Local.iVendors,1)
		F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
			F.Intrinsic.Control.If(V.DataTable.dtFunnel(V.Local.iCnt).NAME_CUSTOMER!FieldValTrim,<>,"")
				F.Intrinsic.String.Build("{0}*!*{1}",V.DataTable.dtFunnel(V.Local.iCnt).NAME_CUSTOMER!FieldVal,V.DataTable.dtFunnel(V.Local.iCnt).SUM!FieldVal,V.Local.sSeries)
				V.Local.iCnt2.Set(1)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.DataTable.dtFunnel(V.Local.iCnt).NAME_CUSTOMER!FieldValTrim,<>,"")
				F.Intrinsic.String.Build("{0}*!*{1}*!*{2}",v.Local.sSeries,v.DataTable.dtFunnel(v.Local.iCnt).NAME_CUSTOMER!FieldVal,v.DataTable.dtFunnel(v.Local.iCNt).SUM!FieldVal,v.Local.sSeries)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(v.Local.iCnt)
	
	Gui.FrmAging.gsChartTopTen.ClearChart
	Gui.FrmAging.gsChartTopTen.CreateFunnelChart("Top Ten Customers",v.local.sSeries,0,2,3,2,False,False)
Program.Sub.Charts2.End

Program.Sub.Comments.Start
${$0$}$GAB_4544_AR_Monthly_Buckets$}$AGV & JoeyT$}$02/08/2017 4:28:53 PM$}$False
${$5$}$2.0.0.0$}$2
${$6$}$gmansur$}$20230815151611233$}$K/sEmFVXhafX7mOm1w0TdKIbTZlXvIA3/7k84s/XX9tPo70MJfyf94Q6tKhrbKzYY4+evpDBiLM=
Program.Sub.Comments.End
